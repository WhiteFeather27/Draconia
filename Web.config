<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your Node.js application, please visit
  http://go.microsoft.com/fwlink/?LinkId=290972
  -->
<configuration>
  <appSettings>
    
    <!--
    <add key="StorageAccountName" value="Draconia" />
    <add key="StorageAccountKey" value="EOS5Vb4nJ75J4c75zneBHJdvjyCyMDAxBXRWSgCiMXuFENpxgH8mU" />
    <add key="ServiceBusNamespace" value="Draconia" />
    <add key="ServiceBusIssuerName" value="wzmefidibtyy" />
    <add key="ServiceBusIssuerSecretKey" value=""5HtK3MEwmFbPPLgJ41hSrqBkwqW2SndJZpnznogrijKTNh2Kgio />
    -->
  </appSettings>
  <system.webServer>
    <!-- mimeMap enables IIS to serve particular file types as specified by fileExtension. -->
    <staticContent>
      <mimeMap fileExtension=".svg" mimeType="image/svg+xml" />
    </staticContent>
    
    <modules runAllManagedModulesForAllRequests="false" />

    <!-- Web.Debug.config adds attributes to this to enable remote debugging when publishing in Debug configuration. -->
    <iisnode watchedFiles="web.config;*.js;routes\*.js;views\*.pug"/>

    <!-- Remote debugging (Azure Website with git deploy): Comment out iisnode above, and uncomment iisnode below. -->
    <!--<iisnode watchedFiles="web.config;*.js;routes\*.js;views\*.pug"
      loggingEnabled="true"
      devErrorsEnabled="true"
      nodeProcessCommandLine="node.exe &#45;&#45;debug"/>-->

    <!-- indicates that the server.js file is a Node.js application 
    to be handled by the iisnode module -->
    <handlers>
      <add name="iisnode" path="app.js" verb="*" modules="iisnode" />

      <!-- Remote debugging (Azure Website with git deploy): Uncomment NtvsDebugProxy handler below.
      Additionally copy Microsoft.NodejsTools.WebRole to 'bin' from the Remote Debug Proxy folder.-->
      <!--<add name="NtvsDebugProxy" path="ntvs-debug-proxy/9a1e84a6-5e4b-4391-b7d7-60843832a62b" verb="*" resourceType="Unspecified"
        type="Microsoft.NodejsTools.Debugger.WebSocketProxy, Microsoft.NodejsTools.WebRole"/>-->
    </handlers>
    <rewrite>
      <rules>
        <clear />
        <!-- Remote debugging (Azure Website with git deploy): Uncomment the NtvsDebugProxy rule below. -->
        <!--<rule name="NtvsDebugProxy" enabled="true" stopProcessing="true">
          <match url="^ntvs-debug-proxy/.*"/>
        </rule>-->
        <rule name="Draconia" enabled="true" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="iisnode.+" negate="true" />
          <conditions logicalGrouping="MatchAll" trackAllCaptures="false" />
          <action type="Rewrite" url="app.js" />
        </rule>
      </rules>
    </rewrite>
  </system.webServer>

  <!-- Remote debugging (Azure Website with git deploy): uncomment system.web below -->
  <!--<system.web>
    <httpRuntime targetFramework="4.5"/>
    <customErrors mode="Off"/>
  </system.web>-->
</configuration>

{
"name": "draconia",
"version": "1.0.0",
"description": "Crypto ",
"main": "truffle-config.js",
"directories": {
"test": "test"
},
"dependencies": {
"@alch/alchemy-web3": "^1.1.4",
"coin": "^0.0.1",
"crypto": "^1.0.1",
"dat-swarm-defaults": "^1.0.2",
"discovery-swarm": "^5.1.0",
"dragon": "^0.3.0",
"get-port": "^5.1.1",
"geth": "^0.4.0",
"truffle": "^5.1.65"
},
"scripts": {
"test": "echo \"Error: no test specified\"
},
"author": "Colton \"White Feather\" Elliott",
"license": "MIT",
"devDependencies": {
"mocha": "^8.1.2"
},
"repository": {
"type": "git",
"url": "git+https://github.com/WhiteFeather27/Draconia.git"
},
"keywords": [
"DGN"
],
"bugs": {
"url": "https://github.com/WhiteFeather27/Draconia/issues",
"homepage": "https://github.com/WhiteFeather27/Draconia#readme"
}

